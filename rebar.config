%% -*- mode: erlang; erlang-indent-level: 2; indent-tabs-mode: nil -*-

%% rebar.config sample
%% https://github.com/rebar/rebar/blob/master/rebar.config.sample

%% == QuickCheck ==
%% If qc_mod is unspecified, rebar tries to detect Triq or EQC
%{qc_opts, [{qc_mod, module()}, Options]}.
%{qc_opts, [{qc_mod, module()}]}.
%% Additional compile options for qc. erl_opts is also used
%{qc_compile_opts, []}.
%% Same as erl_first_files, but used only when running 'qc'
%{qc_first_files, []}.

%{lib_dirs, ["..", "/home/mattias/erl-src/eqcmini/eqc-1.0.1/ebin"]}.
%{lib_dirs, [".."]}.
%{lib_dirs, ["..", "/home/mattias/erl-src/eqcmini/eqc-1.0.1/"]}.
%{deps_dir, [".."]}.
{deps_dir,["deps"]}.

%trying to handle my own apps here too
%{sub_dirs, ["../last_ipaddress"]}.

{erl_opts, [debug_info, fail_on_warning, {parse_transform, lager_transform}]}.

{deps,[
       %% triq, alt to eqc and proper: https://github.com/krestenkrab/triq
       {eqc, ".*", {git, "git://github.com/rpt/eqcmini.git"}},
       %%    {cowboy,        ".*", {git, "git://github.com/extend/cowboy",          {tag,"0.9.0"}}},
       %%    {gproc,         ".*", {git, "git://github.com/uwiger/gproc.git",       {tag,"0.3"}}},
       %%    {erlydtl,       ".*", {git, "git://github.com/evanmiller/erlydtl.git", {tag,"0.8.0"}}}
       %%not working       {last_ipaddrs,  "../last_ipaddress"},
%%       {lager,         ".*", {git, "git://github.com/basho/lager", {tag,"2.0.3"}}}
       {lager,         ".*", {git, "git://github.com/basho/lager", {tag,"master"}}},
%%       {recon,         ".*", {git, "git://github.com/ferd/recon", {tag,"master"}}},
       {sync,         ".*", {git, "git://github.com/rustyio/sync", {tag,"master"}}},

       %% eper contains redbug("foo:bar").
       {eper,         ".*", {git, "git://github.com/massemanet/eper", {tag,"master"}}}

       %% parallel list operations and some extensions to stdlib for files etc
       %% {erlware_commons,         ".*", {git, "git://github.com/erlware/erlware_commons", {tag,"master"}}}
      ]
}.

{cover_enabled, true}.
{cover_print_enabled, true}.
{xref_checks, [undefined_function_calls]}.

{clean_files, ["*.eunit", "ebin/*.beam"]}.
{eunit_opts, [verbose,
   {report, {eunit_surefire, [{dir, "."}]}}]}.
