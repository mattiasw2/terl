module 'access1' ['access1'/1,
		  'build1'/1,
		  'module_info'/0,
		  'module_info'/1,
		  'to_core'/0]
    attributes [%% Line 1
		'type' =
		    %% Line 1
		    [{{'record','contact'},[{'typed_record_field',{'record_field',2,{'atom',2,'name'},{'string',2,[110|[97|[109|[101|[95|[100|[101|[102|[97|[117|[108|[116]]]]]]]]]]]]}},{'type',2,'string',[]}}|[{'typed_record_field',{'record_field',3,{'atom',3,'age'},{'op',3,'-',{'integer',3,1}}},{'type',3,'integer',[]}}]],[]}],
		%% Line 6
		'type' =
		    %% Line 6
		    [{{'record','contacts'},[{'typed_record_field',{'record_field',7,{'atom',7,'company'},{'string',7,[99|[111|[109|[112|[97|[110|[121|[95|[100|[101|[102|[97|[117|[108|[116]]]]]]]]]]]]]]]}},{'type',7,'string',[]}}|[{'typed_record_field',{'record_field',8,{'atom',8,'contacts'},{'nil',8}},{'type',8,'list',[{'type',8,'record',[{'atom',8,'contact'}]}]}}]],[]}],
		%% Line 12
		'type' =
		    %% Line 12
		    [{{'record','device'},[{'typed_record_field',{'record_field',13,{'atom',13,'name'},{'string',13,[110|[97|[109|[101|[95|[100|[101|[102|[97|[117|[108|[116]]]]]]]]]]]]}},{'type',13,'string',[]}}|[{'typed_record_field',{'record_field',14,{'atom',14,'ip_address'},{'string',14,[48|[46|[48|[46|[48|[46|[48]]]]]]]}},{'type',14,'string',[]}}]],[]}],
		%% Line 17
		'type' =
		    %% Line 17
		    [{'mail',{'type',17,'union',[{'type',17,'record',[{'atom',17,'contact'}]}|[{'type',17,'record',[{'atom',17,'device'}]}]]},[]}],
		%% Line 7
		'spec' =
		    %% Line 7
		    [{{'build1',1},[{'type',7,'fun',[{'type',7,'product',[{'type',7,'string',[]}]}|[{'type',7,'record',[{'atom',7,'contact'}]}]]}]}]]
'build1'/1 =
    %% Line 8
    fun (_cor0) ->
	%% Line 9
	{'contact',_cor0,-1}
'access1'/1 =
    %% Line 11
    fun (_cor0) ->
	%% Line 12
	( case _cor0 of
	    ( <( {'contact',_rec0,_cor3}
		 -| ['compiler_generated'] )> when 'true' ->
		  _rec0
	      -| ['compiler_generated'] )
	    ( <_cor4> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','contact'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'to_core'/0 =
    %% Line 14
    fun () ->
	%% Line 15
	call 'compile':'file'
	    ([46|[46|[47|[115|[97|[109|[112|[108|[101|[115|[47|[97|[99|[99|[101|[115|[115|[49|[46|[101|[114|[108]]]]]]]]]]]]]]]]]]]]]], ['to_core'])
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('access1')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('access1', _cor0)
end